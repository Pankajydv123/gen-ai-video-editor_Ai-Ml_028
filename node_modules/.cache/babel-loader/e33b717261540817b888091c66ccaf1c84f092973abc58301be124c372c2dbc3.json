{"ast":null,"code":"var _jsxFileName = \"D:\\\\github\\\\gen-ai-video-editor_Ai-Ml_028\\\\src\\\\components\\\\video_editor.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport './BG.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VideoEditor() {\n  _s();\n  const inputRef = useRef();\n  const [videoFile, setVideoFile] = useState(null);\n  const [videoPreview, setVideoPreview] = useState(null);\n  const [outputVideo, setOutputVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleUpload = async e => {\n    const file = e.target.files[0];\n    if (file && file.type.startsWith(\"video/\")) {\n      setVideoFile(file);\n      setVideoPreview(URL.createObjectURL(file));\n      setOutputVideo(null);\n\n      // Upload to Backblaze\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      setLoading(true);\n      try {\n        const res = await axios.post(\"https://video-upload-b2.onrender.com/upload\", formData);\n        const videoUrl = res.data.video_url;\n        handleRemoveBackground(videoUrl);\n      } catch (err) {\n        console.error(\"Upload failed:\", err);\n        alert(\"Failed to upload video.\");\n        setLoading(false);\n      }\n    }\n  };\n  const handleRemoveBackground = async videoUrl => {\n    try {\n      const res = await axios.post(\"https://gen-ai-video-editor-ai-ml-028.onrender.com/remove-background-from-url\", {\n        video_url: videoUrl\n      }, {\n        responseType: \"blob\",\n        validateStatus: () => true\n      });\n      if (res.status !== 200) {\n        const errorText = await res.data.text();\n        let errorMsg;\n        try {\n          const json = JSON.parse(errorText);\n          errorMsg = json.detail || \"Unknown error\";\n        } catch {\n          errorMsg = errorText || \"Server returned an unknown error.\";\n        }\n        throw new Error(errorMsg);\n      }\n      const blob = new Blob([res.data], {\n        type: \"video/mp4\"\n      });\n      const videoUrlBlob = URL.createObjectURL(blob);\n      setOutputVideo(videoUrlBlob);\n    } catch (err) {\n      console.error(\"❌ Background removal failed:\", err);\n      alert(\"Background removal failed:\\n\" + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"BG\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SideBar\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => inputRef.current.click(),\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BodyBar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"UploadBox\",\n        onClick: () => inputRef.current.click(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: inputRef,\n          type: \"file\",\n          accept: \"video/*\",\n          style: {\n            display: \"none\"\n          },\n          onChange: handleUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), videoPreview ? /*#__PURE__*/_jsxDEV(\"video\", {\n          src: videoPreview,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click to upload a video\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Processing video...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), outputVideo && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"OutputBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Background Removed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          src: outputVideo,\n          controls: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: outputVideo,\n          download: \"bg_removed.mp4\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Download Video\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(VideoEditor, \"06FVj0fezS0B579pbCwh6ey5Y6g=\");\n_c = VideoEditor;\nvar _c;\n$RefreshReg$(_c, \"VideoEditor\");","map":{"version":3,"names":["React","useRef","useState","axios","jsxDEV","_jsxDEV","VideoEditor","_s","inputRef","videoFile","setVideoFile","videoPreview","setVideoPreview","outputVideo","setOutputVideo","loading","setLoading","handleUpload","e","file","target","files","type","startsWith","URL","createObjectURL","formData","FormData","append","res","post","videoUrl","data","video_url","handleRemoveBackground","err","console","error","alert","responseType","validateStatus","status","errorText","text","errorMsg","json","JSON","parse","detail","Error","blob","Blob","videoUrlBlob","message","className","children","onClick","current","click","fileName","_jsxFileName","lineNumber","columnNumber","ref","accept","style","display","onChange","src","controls","color","href","download","_c","$RefreshReg$"],"sources":["D:/github/gen-ai-video-editor_Ai-Ml_028/src/components/video_editor.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport './BG.css';\r\nimport axios from 'axios';\r\n\r\nexport default function VideoEditor() {\r\n  const inputRef = useRef();\r\n  const [videoFile, setVideoFile] = useState(null);\r\n  const [videoPreview, setVideoPreview] = useState(null);\r\n  const [outputVideo, setOutputVideo] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleUpload = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file && file.type.startsWith(\"video/\")) {\r\n      setVideoFile(file);\r\n      setVideoPreview(URL.createObjectURL(file));\r\n      setOutputVideo(null);\r\n\r\n      // Upload to Backblaze\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n\r\n      setLoading(true);\r\n      try {\r\n        const res = await axios.post(\"https://video-upload-b2.onrender.com/upload\", formData);\r\n        const videoUrl = res.data.video_url;\r\n        handleRemoveBackground(videoUrl);\r\n      } catch (err) {\r\n        console.error(\"Upload failed:\", err);\r\n        alert(\"Failed to upload video.\");\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRemoveBackground = async (videoUrl) => {\r\n    try {\r\n      const res = await axios.post(\"https://gen-ai-video-editor-ai-ml-028.onrender.com/remove-background-from-url\", {\r\n        video_url: videoUrl\r\n      }, {\r\n        responseType: \"blob\",\r\n        validateStatus: () => true,\r\n      });\r\n\r\n      if (res.status !== 200) {\r\n        const errorText = await res.data.text();\r\n        let errorMsg;\r\n        try {\r\n          const json = JSON.parse(errorText);\r\n          errorMsg = json.detail || \"Unknown error\";\r\n        } catch {\r\n          errorMsg = errorText || \"Server returned an unknown error.\";\r\n        }\r\n        throw new Error(errorMsg);\r\n      }\r\n\r\n      const blob = new Blob([res.data], { type: \"video/mp4\" });\r\n      const videoUrlBlob = URL.createObjectURL(blob);\r\n      setOutputVideo(videoUrlBlob);\r\n    } catch (err) {\r\n      console.error(\"❌ Background removal failed:\", err);\r\n      alert(\"Background removal failed:\\n\" + err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"BG\">\r\n      <div className=\"SideBar\">\r\n        <ul>\r\n          <li onClick={() => inputRef.current.click()}>Upload</li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"BodyBar\">\r\n        <div className=\"UploadBox\" onClick={() => inputRef.current.click()}>\r\n          <input\r\n            ref={inputRef}\r\n            type=\"file\"\r\n            accept=\"video/*\"\r\n            style={{ display: \"none\" }}\r\n            onChange={handleUpload}\r\n          />\r\n          {videoPreview ? (\r\n            <video src={videoPreview} controls />\r\n          ) : (\r\n            <p>Click to upload a video</p>\r\n          )}\r\n        </div>\r\n\r\n        {loading && <p style={{ color: \"white\" }}>Processing video...</p>}\r\n\r\n        {outputVideo && (\r\n          <div className=\"OutputBox\">\r\n            <h4>Background Removed:</h4>\r\n            <video src={outputVideo} controls />\r\n            <a href={outputVideo} download=\"bg_removed.mp4\">\r\n              <button>Download Video</button>\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}