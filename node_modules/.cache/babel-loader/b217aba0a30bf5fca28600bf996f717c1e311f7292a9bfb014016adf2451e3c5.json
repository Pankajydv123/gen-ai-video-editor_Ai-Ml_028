{"ast":null,"code":"const sendToolRequest = async (url, formData) => {\n  setLoading(true);\n  try {\n    const res = await axios.post(url, formData, {\n      responseType: \"blob\",\n      validateStatus: () => true\n    });\n    const blob = new Blob([res.data], {\n      type: \"video/mp4\"\n    });\n    setOutputVideo(URL.createObjectURL(blob));\n  } catch (err) {\n    alert(\"Error: \" + err.message);\n  } finally {\n    setLoading(false);\n  }\n};\nconst handleClip = () => {\n  const start = document.getElementById(\"clip-start\").value;\n  const end = document.getElementById(\"clip-end\").value;\n  const formData = new FormData();\n  formData.append(\"video\", videoFile);\n  formData.append(\"start\", start);\n  formData.append(\"end\", end);\n  sendToolRequest(\"http://localhost:8000/clip-video\", formData);\n};\nconst handleCrop = () => {\n  const width = document.getElementById(\"crop-width\").value;\n  const height = document.getElementById(\"crop-height\").value;\n  const formData = new FormData();\n  formData.append(\"video\", videoFile);\n  formData.append(\"width\", width);\n  formData.append(\"height\", height);\n  formData.append(\"x\", 0);\n  formData.append(\"y\", 0);\n  sendToolRequest(\"http://localhost:8000/crop-video\", formData);\n};\nconst handleEffect = () => {\n  const effect = document.getElementById(\"effect-type\").value;\n  const formData = new FormData();\n  formData.append(\"video\", videoFile);\n  formData.append(\"effect_type\", effect);\n  sendToolRequest(\"http://localhost:8000/apply-effect\", formData);\n};","map":{"version":3,"names":["sendToolRequest","url","formData","setLoading","res","axios","post","responseType","validateStatus","blob","Blob","data","type","setOutputVideo","URL","createObjectURL","err","alert","message","handleClip","start","document","getElementById","value","end","FormData","append","videoFile","handleCrop","width","height","handleEffect","effect"],"sources":["D:/github/gen-ai-video-editor_Ai-Ml_028/src/components/video_editor.js"],"sourcesContent":["const sendToolRequest = async (url, formData) => {\r\n  setLoading(true);\r\n  try {\r\n    const res = await axios.post(url, formData, {\r\n      responseType: \"blob\",\r\n      validateStatus: () => true,\r\n    });\r\n    const blob = new Blob([res.data], { type: \"video/mp4\" });\r\n    setOutputVideo(URL.createObjectURL(blob));\r\n  } catch (err) {\r\n    alert(\"Error: \" + err.message);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n\r\nconst handleClip = () => {\r\n  const start = document.getElementById(\"clip-start\").value;\r\n  const end = document.getElementById(\"clip-end\").value;\r\n  const formData = new FormData();\r\n  formData.append(\"video\", videoFile);\r\n  formData.append(\"start\", start);\r\n  formData.append(\"end\", end);\r\n  sendToolRequest(\"http://localhost:8000/clip-video\", formData);\r\n};\r\n\r\nconst handleCrop = () => {\r\n  const width = document.getElementById(\"crop-width\").value;\r\n  const height = document.getElementById(\"crop-height\").value;\r\n  const formData = new FormData();\r\n  formData.append(\"video\", videoFile);\r\n  formData.append(\"width\", width);\r\n  formData.append(\"height\", height);\r\n  formData.append(\"x\", 0);\r\n  formData.append(\"y\", 0);\r\n  sendToolRequest(\"http://localhost:8000/crop-video\", formData);\r\n};\r\n\r\nconst handleEffect = () => {\r\n  const effect = document.getElementById(\"effect-type\").value;\r\n  const formData = new FormData();\r\n  formData.append(\"video\", videoFile);\r\n  formData.append(\"effect_type\", effect);\r\n  sendToolRequest(\"http://localhost:8000/apply-effect\", formData);\r\n};\r\n"],"mappings":"AAAA,MAAMA,eAAe,GAAG,MAAAA,CAAOC,GAAG,EAAEC,QAAQ,KAAK;EAC/CC,UAAU,CAAC,IAAI,CAAC;EAChB,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACC,IAAI,CAACL,GAAG,EAAEC,QAAQ,EAAE;MAC1CK,YAAY,EAAE,MAAM;MACpBC,cAAc,EAAEA,CAAA,KAAM;IACxB,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACN,GAAG,CAACO,IAAI,CAAC,EAAE;MAAEC,IAAI,EAAE;IAAY,CAAC,CAAC;IACxDC,cAAc,CAACC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC,CAAC;EAC3C,CAAC,CAAC,OAAOO,GAAG,EAAE;IACZC,KAAK,CAAC,SAAS,GAAGD,GAAG,CAACE,OAAO,CAAC;EAChC,CAAC,SAAS;IACRf,UAAU,CAAC,KAAK,CAAC;EACnB;AACF,CAAC;AAED,MAAMgB,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;EACzD,MAAMC,GAAG,GAAGH,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;EACrD,MAAMrB,QAAQ,GAAG,IAAIuB,QAAQ,CAAC,CAAC;EAC/BvB,QAAQ,CAACwB,MAAM,CAAC,OAAO,EAAEC,SAAS,CAAC;EACnCzB,QAAQ,CAACwB,MAAM,CAAC,OAAO,EAAEN,KAAK,CAAC;EAC/BlB,QAAQ,CAACwB,MAAM,CAAC,KAAK,EAAEF,GAAG,CAAC;EAC3BxB,eAAe,CAAC,kCAAkC,EAAEE,QAAQ,CAAC;AAC/D,CAAC;AAED,MAAM0B,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,KAAK,GAAGR,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;EACzD,MAAMO,MAAM,GAAGT,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK;EAC3D,MAAMrB,QAAQ,GAAG,IAAIuB,QAAQ,CAAC,CAAC;EAC/BvB,QAAQ,CAACwB,MAAM,CAAC,OAAO,EAAEC,SAAS,CAAC;EACnCzB,QAAQ,CAACwB,MAAM,CAAC,OAAO,EAAEG,KAAK,CAAC;EAC/B3B,QAAQ,CAACwB,MAAM,CAAC,QAAQ,EAAEI,MAAM,CAAC;EACjC5B,QAAQ,CAACwB,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;EACvBxB,QAAQ,CAACwB,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;EACvB1B,eAAe,CAAC,kCAAkC,EAAEE,QAAQ,CAAC;AAC/D,CAAC;AAED,MAAM6B,YAAY,GAAGA,CAAA,KAAM;EACzB,MAAMC,MAAM,GAAGX,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK;EAC3D,MAAMrB,QAAQ,GAAG,IAAIuB,QAAQ,CAAC,CAAC;EAC/BvB,QAAQ,CAACwB,MAAM,CAAC,OAAO,EAAEC,SAAS,CAAC;EACnCzB,QAAQ,CAACwB,MAAM,CAAC,aAAa,EAAEM,MAAM,CAAC;EACtChC,eAAe,CAAC,oCAAoC,EAAEE,QAAQ,CAAC;AACjE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}